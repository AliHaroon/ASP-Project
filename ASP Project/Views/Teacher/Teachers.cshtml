@model IEnumerable<ASP_Project.Models.Teacher>
@{
	ViewData["Title"] = "Teachers";
}
<div class="container bg-white fixed-section" style="padding: 20px; overflow-x: hidden; overflow-y:auto; margin-bottom: 0 0;">
	<h2 class="header h2 text-center">Students</h2>
	<table class="table bg-white table-hover table-striped">
		<thead class="bg-primary text-white">
			<tr>
				<th scope="col">
					@Html.DisplayNameFor(model => model.TeacherID)
				</th>
				<th scope="col">
					@Html.DisplayNameFor(model => model.FirstName)
				</th>
				<th scope="col">
					@Html.DisplayNameFor(model => model.MiddleName)
				</th>
				<th scope="col">
					@Html.DisplayNameFor(model => model.LastName)
				</th>
				<th scope="col">
					@Html.DisplayNameFor(model => model.Username)
				</th>
				<th scope="col">
					@Html.DisplayNameFor(model => model.Courses)
				</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td scope="row">
						@Html.DisplayFor(modelItem => item.TeacherID)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.FirstName)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.MiddleName)
					<td>
						@Html.DisplayFor(modelItem => item.LastName)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Username)
					</td>
					<td>

						@if (item.Courses.Count == 0)
						{
							@Html.Display("This Teachers isn't asigned for any Courses yet")
						}
						else
						{
							<ul>
								@foreach (var element in item.Courses)
								{
									<li>@element</li>
								}
							</ul>
						}
					</td>
					<td>
						<a asp-action="Edit" class="btn btn-link" asp-route-id="@item.TeacherID">Edit</a> |
						<a asp-action="Delete" class="btn btn-link" asp-route-id="@item.TeacherID">Delete</a>
					</td>
				</tr>
			}
		</tbody>
	</table>
