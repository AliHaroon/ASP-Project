@model IEnumerable<ASP_Project.Models.Teacher>
@{
	ViewData["Title"] = "Teachers";
}

<h2>Teachers</h2>

<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.TeacherID)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.FirstName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.MiddleName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.LastName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Username)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Courses)
			</th>
			<th>
			</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.TeacherID)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.FirstName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.MiddleName)
				<td>
					@Html.DisplayFor(modelItem => item.LastName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Username)
				</td>
				<td>

					@if (item.Courses.Count == 0)
					{
						@Html.Display("This Teachers isn't asigned for any Courses yet")
					}
					else
					{
						<ul>
							@foreach (var element in item.Courses)
							{
								<li>@element</li>
							}
						</ul>
					}
				</td>
				<td>
					<a asp-action="Edit" asp-route-id="@item.TeacherID">Edit</a> |
					<a asp-action="Delete" asp-route-id="@item.TeacherID">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>